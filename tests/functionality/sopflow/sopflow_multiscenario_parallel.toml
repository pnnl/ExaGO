testsuite_name = "SOPFLOW Multiscenario Functionality Parallel tests"

[presets]
tolerance = 1e-3
multicontingency = false
multiperiod = false
flatten = false
ignore_lineflow_constraints = true

[[testcase]]
description = 'parallel datafiles/case9/case9mod_gen3_wind.m HIOP IPOPT 10scen SOPFLOW'
network = 'datafiles/case9/case9mod_gen3_wind.m'
scenfile = 'datafiles/case9/10_scenarios_9bus.csv'
solver = 'HIOP'
num_scenarios = -1
initialization_type = 'ACPF'
subproblem_solver = 'IPOPT'
subproblem_model = 'POWER_BALANCE_POLAR'
compute_mode = 'GPU'
verbosity_level = 3
num_iters = 0
obj_value = 0.0

[[testcase]]
description = 'parallel datafiles/case_ACTIVSg200.m HIOP IPOPT 10scen SOPFLOW'
network = 'datafiles/case_ACTIVSg200.m'
scenfile = 'datafiles/10_scenarios_ACTIVSg200.csv'
solver = 'HIOP'
num_scenarios = -1
initialization_type = 'ACPF'
subproblem_solver = 'IPOPT'
subproblem_model = 'POWER_BALANCE_POLAR'
compute_mode = 'GPU'
verbosity_level = 3
num_iters = 0
obj_value = 0.0

[[testcase]]
description = 'parallel datafiles/case9/case9mod_gen3_wind.m HIOP IPOPT 3scen SOPFLOW with 5 contingencies'
network = 'datafiles/case9/case9mod_gen3_wind.m'
scenfile = 'datafiles/case9/10_scenarios_9bus.csv'
contingencies = 'datafiles/case9/case9.cont'
solver = 'HIOP'
num_scenarios = 3
multicontingency = true
flatten = true
num_contingencies = 5
initialization_type = 'ACPF'
subproblem_solver = 'IPOPT'
subproblem_model = 'POWER_BALANCE_POLAR'
compute_mode = 'GPU'
verbosity_level = 3
num_iters = 0
obj_value = 0.0
